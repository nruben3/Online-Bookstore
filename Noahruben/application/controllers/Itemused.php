<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Itemused extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Itemused_model');
    } 

    /*
     * Listing of itemused
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('itemused/index?');
        $config['total_rows'] = $this->Itemused_model->get_all_itemused_count();
        $this->pagination->initialize($config);

        $data['itemused'] = $this->Itemused_model->get_all_itemused($params);
        
        $data['_view'] = 'itemused/index';
        $this->load->view('layouts/main',$data);
    }
    /*
     * Get Steets on Regions base that are allocated to Employee
  
    /*
     * Get Steets on Regions base that are allocated to Employee
     */
 
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('name','name','required');
		

		
		if($this->form_validation->run())     
        {   
            
    
            $params = array(
			 
              'name' => $this->input->post('name'),
              'price' => $this->input->post('price'),
              'author' => $this->input->post('author'),
              'avg_rat' => $this->input->post('avg_rat'),
              'isbn' => $this->input->post('isbn'),
              'isbn13' => $this->input->post('isbn13'),
              'language' => $this->input->post('language'),
              'num_pages' => $this->input->post('num_pages'),
              'ratings_count' => $this->input->post('ratings_count'),
              'text_reviews_count' => $this->input->post('text_reviews_count'),
              'publication_date' => $this->input->post('publication_date'),
              'publisher' => $this->input->post('publisher'),
              'stock' => $this->input->post('stock'),
             
                'delete_id' => 1
            );

            $itemused_id = $this->Itemused_model->add_itemused($params);
            redirect('itemused/index');
        }
        else
        {
           

			$this->load->model('Item_model');
			$data['all_items'] = $this->Item_model->get_all_items();


            
            $data['_view'] = 'itemused/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a itemused
     */
    function edit($id)
    {   
        // check if the itemused exists before trying to edit it
        $data['itemused'] = $this->Itemused_model->get_itemused($id);

        //print_r($data['itemused']);exit();
        
        if(isset($data['itemused']['id']))
        {
           
        $this->load->library('form_validation');

        $this->form_validation->set_rules('name','name','required');
			if($this->form_validation->run())     
            {  
               
                $params = array(
					  'name' => $this->input->post('name'),
              'price' => $this->input->post('price'),
              'author' => $this->input->post('author'),
              'avg_rat' => $this->input->post('avg_rat'),
              'isbn' => $this->input->post('isbn'),
              'isbn13' => $this->input->post('isbn13'),
              'language' => $this->input->post('language'),
              'num_pages' => $this->input->post('num_pages'),
              'ratings_count' => $this->input->post('ratings_count'),
              'text_reviews_count' => $this->input->post('text_reviews_count'),
              'publication_date' => $this->input->post('publication_date'),
              'publisher' => $this->input->post('publisher'),
              'stock' => $this->input->post('stock'),
             
                'delete_id' => 1
                );

                $this->Itemused_model->update_itemused($id,$params);            
                redirect('itemused/index');
            }
            else
            {
				$this->load->model('Item_model');
				$data['all_items'] = $this->Item_model->get_all_items();

				

                $data['_view'] = 'itemused/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The itemused you are trying to edit does not exist.');
    } 

    /*
     * Deleting itemused
     */
    function remove($id)
    {
        $itemused = $this->Itemused_model->get_itemused($id);

        // check if the itemused exists before trying to delete it
        if(isset($itemused['id']))
        {
            $params = array(
                'feemanag_id' => $id,
            );
            $paramss = array(
                'delete_id' => 0
            );
            $this->Itemused_model->insert_deleterec($params);
            $this->Itemused_model->delete_itemused($id,$paramss);
//            $this->Itemused_model->delete_itemused($id);
            redirect('itemused/index');
        }
        else
            show_error('The itemused you are trying to delete does not exist.');
    }
    
}
