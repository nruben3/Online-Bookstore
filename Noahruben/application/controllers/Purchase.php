<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Purchase extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Purchase_model');
        $this->load->model('Orders_model');
    } 

    /*
     * Listing of customers
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('purchase/index?');
        $config['total_rows'] = $this->Purchase_model->get_all_customers_count();
        $this->pagination->initialize($config);

        $data['customers'] = $this->Purchase_model->get_all_customers($params);
         $data['cartItems'] = $this->Orders_model->get_all_Order();

         

          

        
        $data['_view'] = 'purchase/index';
        $this->load->view('layouts/main',$data);
    }
    /*
     * Adding a new customers
     */
    function add()
    {

        $this->load->library('form_validation');

		$this->form_validation->set_rules('customer_name','customer_name','required');
	

        $origDate = $this->input->post('date_created');
        $date = str_replace('/', '-', $origDate );
        $date_created = date("Y-m-d", strtotime($date));
        $total_price = $this->input->post('total_price');
        $product_price = $this->input->post('product_price');
         $charge = $this->input->post('charge');
         $Profits = $total_price-($product_price + $charge);

         //print_r($Profits);exit();
		
		if($this->form_validation->run())     
        {

            $params = array(

				'customer_name' => $this->input->post('customer_name'),
				'phone' => $this->input->post('phone'),
				'city' => $this->input->post('city'),
                'address' => $this->input->post('address'),
                'delivery' => $this->input->post('delivery'),
               
                'total_price' => $this->input->post('total_price'),
                'product_price' => $this->input->post('product_price'),
                'charge' => $this->input->post('charge'),
                'date_created ' => $date_created,
                'profits' => $profits,
                'tracking_code' => $this->input->post('tracking_code'),
              
				
                'delete_id' =>1
            );


            $this->Purchase_model->add_customers($params);
            redirect('Purchase/index');
        }
        else
        {
			$this->load->model('Item_model');
			$data['all_items'] = $this->Item_model->get_all_items();


            
            $data['_view'] = 'purchase/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a customers
     */
    function edit($id)
    {   
        // check if the customers exists before trying to edit it
        $data['customers'] = $this->Purchase_model->get_customers($id);
        
        if(isset($data['customers']['id']))
        {
            $this->load->library('form_validation');

        $this->form_validation->set_rules('customer_name','customer_name','required');
    

        $origDate = $this->input->post('date_created');
        $date = str_replace('/', '-', $origDate );
        $date_created = date("Y-m-d", strtotime($date));
        $total_price = $this->input->post('total_price');
        $product_price = $this->input->post('product_price');
         $charge = $this->input->post('charge');
         $Profits = $total_price-($product_price + $charge);
		
			if($this->form_validation->run())     
            {
                $total=$this->input->post('qty')*$this->input->post('customers_price');
                $params = array(
                'customer_name' => $this->input->post('customer_name'),
                'phone' => $this->input->post('phone'),
                'city' => $this->input->post('city'),
                'address' => $this->input->post('address'),
                'delivery' => $this->input->post('delivery'),
             
                'total_price' => $this->input->post('total_price'),
                'product_price' => $this->input->post('product_price'),
                'charge' => $this->input->post('charge'),
                'date_created ' => $date_created,
                  'Profits' => $Profits,
                'tracking_code' => $this->input->post('tracking_code'),
              
                
                'delete_id' =>1
                );

                $this->Purchase_model->update_customers($id,$params);            
                redirect('Purchase/index');
            }
            else
            {
				$this->load->model('Item_model');
				$data['all_items'] = $this->Item_model->get_all_items();

                $data['_view'] = 'purchase/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The customers you are trying to edit does not exist.');
    } 

    /*
     * Deleting customers
     */
    function remove($id)
    {
        $customers = $this->Purchase_model->get_customers($id);

        // check if the customers exists before trying to delete it
        if(isset($customers['id']))
        {
            $params = array(
                'feemanag_id' => $id,
            );
            $paramss = array(
                'delete_id' => 0
            );
            $this->Purchase_model->insert_deleterec($params);
            $this->Purchase_model->delete_customers($id,$paramss);
//            $this->Purchase_model->delete_customers($id);
            redirect('purchase/index');
        }
        else
            show_error('The customers you are trying to delete does not exist.');
    }


function update_status($id)
    {
        // check if the trade exists before trying to edit it
        $data['trade'] = $this->Purchase_model->get_customers($id);
        //print_r($data['trade']);exit();
    //$abc = $this->input->post('status');
   //s print_r($abc);exit();
        if(isset($data['trade']['id']))
        {

            $params = array(
                'charged' => $this->input->post('status'),

            );
            $this->Purchase_model->update_customers($id,$params); 
            redirect('Purchase/index');
        }
        else
            show_error('The Assets you are trying to edit does not exist.');
    }

}
